290   INFO  o.s.test.context.TestContextManager - @TestExecutionListeners is not present for class [class eimsb.batch.H2ConfigTest]: using defaults.
378   INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [eimsb-context.xml]
608   INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [test-h2-config.xml]
652   INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@335eadca: startup date [Sat Jan 25 18:48:47 EST 2020]; root of context hierarchy
791   INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'reader': replacing [Generic bean: class [org.springframework.batch.item.file.FlatFileItemReader]; scope=step; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [eimsb-context.xml]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [eimsb-context.xml]]
791   INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'delimitedProductItemWriter': replacing [Generic bean: class [org.springframework.batch.item.file.FlatFileItemWriter]; scope=step; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [eimsb-context.xml]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [eimsb-context.xml]]
807   INFO  o.s.b.f.s.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6385cb26: defining beans [batchMonitoringListener,org.springframework.batch.core.scope.internalStepScope,org.springframework.batch.core.scope.internalJobScope,org.springframework.beans.factory.config.CustomEditorConfigurer,org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor,batch_state_transition_comparator,readWriteProducts,org.springframework.batch.core.configuration.xml.SimpleFlowFactoryBean#0,importProducts,reader,productItemWriter,delimitedProductItemWriter,noOpwriter,dataSource,transactionManager,jobRepository,jobLauncher,org.springframework.jmx.export.MBeanExporter#0,jobExplorer,jobRegistry,jobOperator,exceptionTranslator,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,scopedTarget.reader,scopedTarget.delimitedProductItemWriter]; root of factory hierarchy
1253  INFO  o.s.j.d.i.ResourceDatabasePopulator - Executing SQL script from class path resource [schema-h2.sql]
1261  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP TABLE BATCH_STEP_EXECUTION_CONTEXT IF EXISTS 
1265  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP TABLE BATCH_JOB_EXECUTION_CONTEXT IF EXISTS 
1267  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP TABLE BATCH_STEP_EXECUTION IF EXISTS 
1268  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP TABLE BATCH_JOB_EXECUTION_PARAMS IF EXISTS 
1270  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP TABLE BATCH_JOB_EXECUTION IF EXISTS 
1271  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP TABLE BATCH_JOB_INSTANCE IF EXISTS 
1272  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP SEQUENCE BATCH_STEP_EXECUTION_SEQ IF EXISTS 
1272  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP SEQUENCE BATCH_JOB_EXECUTION_SEQ IF EXISTS 
1272  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. DROP SEQUENCE BATCH_JOB_SEQ IF EXISTS 
1273  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION 
BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN 
unique (JOB_NAME, JOB_KEY) ) 
1275  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , 
VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME 
TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(2500) 
, EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, JOB_CONFIGURATION_LOCATION VARCHAR(2500) 
NULL, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) 
) 
1290  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) 
NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR(250) , DATE_VAL TIMESTAMP DEFAULT 
NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint 
JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) 
) 
1292  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY 
, VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, 
START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT 
BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT 
, WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(2500) 
, EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign 
key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) ) 
1295  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, 
SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK 
foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) ) 
1297  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT 
VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign 
key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) ) 
1298  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ 
1299  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ 
1299  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
2. CREATE SEQUENCE BATCH_JOB_SEQ 
1299  INFO  o.s.j.d.i.ResourceDatabasePopulator - Done executing SQL script from class path resource [schema-h2.sql] in 46 ms.
1579  INFO  o.s.b.c.l.support.SimpleJobLauncher - No TaskExecutor has been set, defaulting to synchronous executor.
1733  INFO  o.s.jmx.export.MBeanExporter - Registering beans for JMX exposure on startup
1735  INFO  o.s.jmx.export.MBeanExporter - Located managed bean 'spring:service=batch,bean=jobOperator': registering with JMX server as MBean [spring:service=batch,bean=jobOperator]
1789  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = 'importProducts' 
and JOB_KEY = '2c7e276fb4f524f91237f7a01952794f' 
1805  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = 'importProducts' 
and JOB_KEY = '2c7e276fb4f524f91237f7a01952794f' 
1812  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = 'importProducts' 
and JOB_KEY = '2c7e276fb4f524f91237f7a01952794f' 
1813  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
3. select BATCH_JOB_SEQ.nextval from dual 
1817  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT into BATCH_JOB_INSTANCE(JOB_INSTANCE_ID, JOB_NAME, JOB_KEY, VERSION) values (1, 'importProducts', 
'2c7e276fb4f524f91237f7a01952794f', 0) 
1820  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
3. select BATCH_JOB_EXECUTION_SEQ.nextval from dual 
1822  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT into BATCH_JOB_EXECUTION(JOB_EXECUTION_ID, JOB_INSTANCE_ID, START_TIME, END_TIME, STATUS, 
EXIT_CODE, EXIT_MESSAGE, VERSION, CREATE_TIME, LAST_UPDATED, JOB_CONFIGURATION_LOCATION) values 
(1, 1, NULL, NULL, 'STARTING', 'UNKNOWN', '', 0, '01/25/2020 18:48:48.503', '01/25/2020 18:48:48.504', 
NULL) 
1824  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'targetDirectory', 'STRING', './target/test-classes/data/', 
'12/31/1969 19:00:00.000', 0, 0.0, 'Y') 
1825  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'inputFile', 'STRING', 'products.txt', '12/31/1969 
19:00:00.000', 0, 0.0, 'Y') 
1826  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'outputFile', 'STRING', 'products-out.txt', '12/31/1969 
19:00:00.000', 0, 0.0, 'Y') 
1828  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'timestamp', 'LONG', '', '12/31/1969 19:00:00.000', 
1579996128439, 0.0, 'Y') 
1844  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT INTO BATCH_JOB_EXECUTION_CONTEXT (SHORT_CONTEXT, SERIALIZED_CONTEXT, JOB_EXECUTION_ID) 
VALUES('{"map":[""]}', NULL, 1) 
1846  INFO  o.s.b.c.l.support.SimpleJobLauncher - Job: [FlowJob: [name=importProducts]] launched with the following parameters: [{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128439}]
1851  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
1853  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT COUNT(*) FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID = 1 
1856  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_JOB_EXECUTION set START_TIME = '01/25/2020 18:48:48.533', END_TIME = NULL, STATUS 
= 'STARTED', EXIT_CODE = 'UNKNOWN', EXIT_MESSAGE = '', VERSION = 1, CREATE_TIME = '01/25/2020 
18:48:48.503', LAST_UPDATED = '01/25/2020 18:48:48.533' where JOB_EXECUTION_ID = 1 and VERSION 
= 0 
1858  INFO  e.b.s.l.EIMBatchMonitoringListener - Started job JobExecution: id=1, version=1, startTime=Sat Jan 25 18:48:48 EST 2020, endTime=null, lastUpdated=Sat Jan 25 18:48:48 EST 2020, status=STARTED, exitStatus=exitCode=UNKNOWN;exitDescription=, job=[JobInstance: id=1, version=0, Job=[importProducts]], jobParameters=[{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128439}]
1860  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, 
LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_INSTANCE_ID 
= 1 order by JOB_EXECUTION_ID desc 
1862  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, IDENTIFYING 
from BATCH_JOB_EXECUTION_PARAMS where JOB_EXECUTION_ID = 1 
1866  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT STEP_EXECUTION_ID, STEP_NAME, START_TIME, END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, 
FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, 
ROLLBACK_COUNT, LAST_UPDATED, VERSION from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID = 1 
order by STEP_EXECUTION_ID 
1867  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, 
LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_INSTANCE_ID 
= 1 order by JOB_EXECUTION_ID desc 
1867  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, IDENTIFYING 
from BATCH_JOB_EXECUTION_PARAMS where JOB_EXECUTION_ID = 1 
1868  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT STEP_EXECUTION_ID, STEP_NAME, START_TIME, END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, 
FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, 
ROLLBACK_COUNT, LAST_UPDATED, VERSION from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID = 1 
order by STEP_EXECUTION_ID 
1869  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, 
LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_INSTANCE_ID 
= 1 order by JOB_EXECUTION_ID desc 
1869  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, IDENTIFYING 
from BATCH_JOB_EXECUTION_PARAMS where JOB_EXECUTION_ID = 1 
1873  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT STEP_EXECUTION_ID, STEP_NAME, START_TIME, END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, 
FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, 
ROLLBACK_COUNT, LAST_UPDATED, VERSION from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID = 1 
order by STEP_EXECUTION_ID 
1874  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
3. select BATCH_STEP_EXECUTION_SEQ.nextval from dual 
1875  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT into BATCH_STEP_EXECUTION(STEP_EXECUTION_ID, VERSION, STEP_NAME, JOB_EXECUTION_ID, START_TIME, 
END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, 
READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, ROLLBACK_COUNT, LAST_UPDATED) values(1, 
0, 'readWriteProducts', 1, '01/25/2020 18:48:48.557', NULL, 'STARTING', 0, 0, 0, 0, 'EXECUTING', 
'', 0, 0, 0, 0, '01/25/2020 18:48:48.558') 
1876  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. INSERT INTO BATCH_STEP_EXECUTION_CONTEXT (SHORT_CONTEXT, SERIALIZED_CONTEXT, STEP_EXECUTION_ID) 
VALUES('{"map":[""]}', NULL, 1) 
1877  INFO  o.s.b.core.job.SimpleStepHandler - Executing step: [readWriteProducts]
1878  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:48.561', END_TIME = NULL, STATUS 
= 'STARTED', COMMIT_COUNT = 0, READ_COUNT = 0, FILTER_COUNT = 0, WRITE_COUNT = 0, EXIT_CODE 
= 'EXECUTING', EXIT_MESSAGE = '', VERSION = 1, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT = 0, 
WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:48.561' where STEP_EXECUTION_ID 
= 1 and VERSION = 0 
1879  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
1963  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":0},{"string":"FlatFileItemWriter.written","long":0},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":0},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
1981  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":64},{"string":"FlatFileItemWriter.written","long":3},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":3},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
1983  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:48.561', END_TIME = NULL, STATUS 
= 'STARTED', COMMIT_COUNT = 1, READ_COUNT = 3, FILTER_COUNT = 0, WRITE_COUNT = 3, EXIT_CODE 
= 'EXECUTING', EXIT_MESSAGE = '', VERSION = 2, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT = 0, 
WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:48.666' where STEP_EXECUTION_ID 
= 1 and VERSION = 1 
1983  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
1987  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":91},{"string":"FlatFileItemWriter.written","long":4},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":5},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
1988  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:48.561', END_TIME = NULL, STATUS 
= 'STARTED', COMMIT_COUNT = 2, READ_COUNT = 4, FILTER_COUNT = 0, WRITE_COUNT = 4, EXIT_CODE 
= 'EXECUTING', EXIT_MESSAGE = '', VERSION = 3, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT = 0, 
WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:48.672' where STEP_EXECUTION_ID 
= 1 and VERSION = 2 
1989  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
1990  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":91},{"string":"FlatFileItemWriter.written","long":4},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":5},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
1991  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:48.561', END_TIME = '01/25/2020 
18:48:48.675', STATUS = 'COMPLETED', COMMIT_COUNT = 2, READ_COUNT = 4, FILTER_COUNT = 0, WRITE_COUNT 
= 4, EXIT_CODE = 'COMPLETED', EXIT_MESSAGE = '', VERSION = 4, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT 
= 0, WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:48.675' where 
STEP_EXECUTION_ID = 1 and VERSION = 3 
1992  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
1993  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_JOB_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[""]}', SERIALIZED_CONTEXT = 
NULL WHERE JOB_EXECUTION_ID = 1 
1995  INFO  e.b.s.l.EIMBatchMonitoringListener - Ended job JobExecution: id=1, version=1, startTime=Sat Jan 25 18:48:48 EST 2020, endTime=Sat Jan 25 18:48:48 EST 2020, lastUpdated=Sat Jan 25 18:48:48 EST 2020, status=COMPLETED, exitStatus=exitCode=COMPLETED;exitDescription=, job=[JobInstance: id=1, version=0, Job=[importProducts]], jobParameters=[{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128439}]
1996  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
1996  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
3. SELECT COUNT(*) FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID = 1 
1997  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
3. UPDATE BATCH_JOB_EXECUTION set START_TIME = '01/25/2020 18:48:48.533', END_TIME = '01/25/2020 
18:48:48.678', STATUS = 'COMPLETED', EXIT_CODE = 'COMPLETED', EXIT_MESSAGE = '', VERSION = 
2, CREATE_TIME = '01/25/2020 18:48:48.503', LAST_UPDATED = '01/25/2020 18:48:48.679' where 
JOB_EXECUTION_ID = 1 and VERSION = 1 
1998  INFO  o.s.b.c.l.support.SimpleJobLauncher - Job: [FlowJob: [name=importProducts]] completed with the following parameters: [{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128439}] and the following status: [COMPLETED]
2003  INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@335eadca: startup date [Sat Jan 25 18:48:47 EST 2020]; root of context hierarchy
2004  INFO  o.s.b.f.s.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6385cb26: defining beans [batchMonitoringListener,org.springframework.batch.core.scope.internalStepScope,org.springframework.batch.core.scope.internalJobScope,org.springframework.beans.factory.config.CustomEditorConfigurer,org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor,batch_state_transition_comparator,readWriteProducts,org.springframework.batch.core.configuration.xml.SimpleFlowFactoryBean#0,importProducts,reader,productItemWriter,delimitedProductItemWriter,noOpwriter,dataSource,transactionManager,jobRepository,jobLauncher,org.springframework.jmx.export.MBeanExporter#0,jobExplorer,jobRegistry,jobOperator,exceptionTranslator,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,scopedTarget.reader,scopedTarget.delimitedProductItemWriter]; root of factory hierarchy
2004  INFO  o.s.jmx.export.MBeanExporter - Unregistering JMX-exposed beans on shutdown
2006  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
3. SHUTDOWN 
2029  INFO  o.s.test.context.TestContextManager - @TestExecutionListeners is not present for class [class eimsb.batch.JobExplorerTest]: using defaults.
2030  INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [eimsb-context.xml]
2100  INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [test-h2-config.xml]
2121  INFO  o.s.c.s.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@5b7ea70d: startup date [Sat Jan 25 18:48:48 EST 2020]; root of context hierarchy
2132  INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'reader': replacing [Generic bean: class [org.springframework.batch.item.file.FlatFileItemReader]; scope=step; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [eimsb-context.xml]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [eimsb-context.xml]]
2133  INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'delimitedProductItemWriter': replacing [Generic bean: class [org.springframework.batch.item.file.FlatFileItemWriter]; scope=step; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=false; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in class path resource [eimsb-context.xml]] with [Root bean: class [org.springframework.aop.scope.ScopedProxyFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in BeanDefinition defined in class path resource [eimsb-context.xml]]
2137  INFO  o.s.b.f.s.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5ed731d0: defining beans [batchMonitoringListener,org.springframework.batch.core.scope.internalStepScope,org.springframework.batch.core.scope.internalJobScope,org.springframework.beans.factory.config.CustomEditorConfigurer,org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor,batch_state_transition_comparator,readWriteProducts,org.springframework.batch.core.configuration.xml.SimpleFlowFactoryBean#0,importProducts,reader,productItemWriter,delimitedProductItemWriter,noOpwriter,dataSource,transactionManager,jobRepository,jobLauncher,org.springframework.jmx.export.MBeanExporter#0,jobExplorer,jobRegistry,jobOperator,exceptionTranslator,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,scopedTarget.reader,scopedTarget.delimitedProductItemWriter]; root of factory hierarchy
2228  INFO  o.s.j.d.i.ResourceDatabasePopulator - Executing SQL script from class path resource [schema-h2.sql]
2229  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP TABLE BATCH_STEP_EXECUTION_CONTEXT IF EXISTS 
2231  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP TABLE BATCH_JOB_EXECUTION_CONTEXT IF EXISTS 
2232  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP TABLE BATCH_STEP_EXECUTION IF EXISTS 
2233  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP TABLE BATCH_JOB_EXECUTION_PARAMS IF EXISTS 
2234  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP TABLE BATCH_JOB_EXECUTION IF EXISTS 
2235  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP TABLE BATCH_JOB_INSTANCE IF EXISTS 
2236  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP SEQUENCE BATCH_STEP_EXECUTION_SEQ IF EXISTS 
2237  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP SEQUENCE BATCH_JOB_EXECUTION_SEQ IF EXISTS 
2237  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. DROP SEQUENCE BATCH_JOB_SEQ IF EXISTS 
2237  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE TABLE BATCH_JOB_INSTANCE ( JOB_INSTANCE_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , VERSION 
BIGINT , JOB_NAME VARCHAR(100) NOT NULL, JOB_KEY VARCHAR(32) NOT NULL, constraint JOB_INST_UN 
unique (JOB_NAME, JOB_KEY) ) 
2238  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE TABLE BATCH_JOB_EXECUTION ( JOB_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY , 
VERSION BIGINT , JOB_INSTANCE_ID BIGINT NOT NULL, CREATE_TIME TIMESTAMP NOT NULL, START_TIME 
TIMESTAMP DEFAULT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , EXIT_CODE VARCHAR(2500) 
, EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, JOB_CONFIGURATION_LOCATION VARCHAR(2500) 
NULL, constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID) references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID) 
) 
2241  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE TABLE BATCH_JOB_EXECUTION_PARAMS ( JOB_EXECUTION_ID BIGINT NOT NULL , TYPE_CD VARCHAR(6) 
NOT NULL , KEY_NAME VARCHAR(100) NOT NULL , STRING_VAL VARCHAR(250) , DATE_VAL TIMESTAMP DEFAULT 
NULL , LONG_VAL BIGINT , DOUBLE_VAL DOUBLE PRECISION , IDENTIFYING CHAR(1) NOT NULL , constraint 
JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) 
) 
2243  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE TABLE BATCH_STEP_EXECUTION ( STEP_EXECUTION_ID BIGINT IDENTITY NOT NULL PRIMARY KEY 
, VERSION BIGINT NOT NULL, STEP_NAME VARCHAR(100) NOT NULL, JOB_EXECUTION_ID BIGINT NOT NULL, 
START_TIME TIMESTAMP NOT NULL , END_TIME TIMESTAMP DEFAULT NULL , STATUS VARCHAR(10) , COMMIT_COUNT 
BIGINT , READ_COUNT BIGINT , FILTER_COUNT BIGINT , WRITE_COUNT BIGINT , READ_SKIP_COUNT BIGINT 
, WRITE_SKIP_COUNT BIGINT , PROCESS_SKIP_COUNT BIGINT , ROLLBACK_COUNT BIGINT , EXIT_CODE VARCHAR(2500) 
, EXIT_MESSAGE VARCHAR(2500) , LAST_UPDATED TIMESTAMP, constraint JOB_EXEC_STEP_FK foreign 
key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) ) 
2245  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT ( STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, 
SHORT_CONTEXT VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint STEP_EXEC_CTX_FK 
foreign key (STEP_EXECUTION_ID) references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID) ) 
2247  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT ( JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY, SHORT_CONTEXT 
VARCHAR(2500) NOT NULL, SERIALIZED_CONTEXT LONGVARCHAR , constraint JOB_EXEC_CTX_FK foreign 
key (JOB_EXECUTION_ID) references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID) ) 
2248  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ 
2249  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ 
2249  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeUpdate(DelegatingStatement.java:228)
5. CREATE SEQUENCE BATCH_JOB_SEQ 
2249  INFO  o.s.j.d.i.ResourceDatabasePopulator - Done executing SQL script from class path resource [schema-h2.sql] in 21 ms.
2285  INFO  o.s.b.c.l.support.SimpleJobLauncher - No TaskExecutor has been set, defaulting to synchronous executor.
2290  INFO  o.s.jmx.export.MBeanExporter - Registering beans for JMX exposure on startup
2290  INFO  o.s.jmx.export.MBeanExporter - Located managed bean 'spring:service=batch,bean=jobOperator': registering with JMX server as MBean [spring:service=batch,bean=jobOperator]
2295  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = 'importProducts' 
and JOB_KEY = 'c6bf51a6c4dc0b95945b1dde1d0f033c' 
2297  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = 'importProducts' 
and JOB_KEY = 'c6bf51a6c4dc0b95945b1dde1d0f033c' 
2297  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = 'importProducts' 
and JOB_KEY = 'c6bf51a6c4dc0b95945b1dde1d0f033c' 
2298  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
6. select BATCH_JOB_SEQ.nextval from dual 
2298  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT into BATCH_JOB_INSTANCE(JOB_INSTANCE_ID, JOB_NAME, JOB_KEY, VERSION) values (1, 'importProducts', 
'c6bf51a6c4dc0b95945b1dde1d0f033c', 0) 
2299  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
6. select BATCH_JOB_EXECUTION_SEQ.nextval from dual 
2300  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT into BATCH_JOB_EXECUTION(JOB_EXECUTION_ID, JOB_INSTANCE_ID, START_TIME, END_TIME, STATUS, 
EXIT_CODE, EXIT_MESSAGE, VERSION, CREATE_TIME, LAST_UPDATED, JOB_CONFIGURATION_LOCATION) values 
(1, 1, NULL, NULL, 'STARTING', 'UNKNOWN', '', 0, '01/25/2020 18:48:48.983', '01/25/2020 18:48:48.983', 
NULL) 
2301  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'targetDirectory', 'STRING', './target/test-classes/data/', 
'12/31/1969 19:00:00.000', 0, 0.0, 'Y') 
2301  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'inputFile', 'STRING', 'products.txt', '12/31/1969 
19:00:00.000', 0, 0.0, 'Y') 
2302  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'outputFile', 'STRING', 'products-out.txt', '12/31/1969 
19:00:00.000', 0, 0.0, 'Y') 
2302  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT into BATCH_JOB_EXECUTION_PARAMS(JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, 
LONG_VAL, DOUBLE_VAL, IDENTIFYING) values (1, 'timestamp', 'LONG', '', '12/31/1969 19:00:00.000', 
1579996128978, 0.0, 'Y') 
2303  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT INTO BATCH_JOB_EXECUTION_CONTEXT (SHORT_CONTEXT, SERIALIZED_CONTEXT, JOB_EXECUTION_ID) 
VALUES('{"map":[""]}', NULL, 1) 
2304  INFO  o.s.b.c.l.support.SimpleJobLauncher - Job: [FlowJob: [name=importProducts]] launched with the following parameters: [{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128978}]
2304  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
2305  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT COUNT(*) FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID = 1 
2306  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_JOB_EXECUTION set START_TIME = '01/25/2020 18:48:48.988', END_TIME = NULL, STATUS 
= 'STARTED', EXIT_CODE = 'UNKNOWN', EXIT_MESSAGE = '', VERSION = 1, CREATE_TIME = '01/25/2020 
18:48:48.983', LAST_UPDATED = '01/25/2020 18:48:48.988' where JOB_EXECUTION_ID = 1 and VERSION 
= 0 
2307  INFO  e.b.s.l.EIMBatchMonitoringListener - Started job JobExecution: id=1, version=1, startTime=Sat Jan 25 18:48:48 EST 2020, endTime=null, lastUpdated=Sat Jan 25 18:48:48 EST 2020, status=STARTED, exitStatus=exitCode=UNKNOWN;exitDescription=, job=[JobInstance: id=1, version=0, Job=[importProducts]], jobParameters=[{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128978}]
2308  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, 
LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_INSTANCE_ID 
= 1 order by JOB_EXECUTION_ID desc 
2309  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, IDENTIFYING 
from BATCH_JOB_EXECUTION_PARAMS where JOB_EXECUTION_ID = 1 
2309  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT STEP_EXECUTION_ID, STEP_NAME, START_TIME, END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, 
FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, 
ROLLBACK_COUNT, LAST_UPDATED, VERSION from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID = 1 
order by STEP_EXECUTION_ID 
2310  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, 
LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_INSTANCE_ID 
= 1 order by JOB_EXECUTION_ID desc 
2311  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, IDENTIFYING 
from BATCH_JOB_EXECUTION_PARAMS where JOB_EXECUTION_ID = 1 
2311  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT STEP_EXECUTION_ID, STEP_NAME, START_TIME, END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, 
FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, 
ROLLBACK_COUNT, LAST_UPDATED, VERSION from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID = 1 
order by STEP_EXECUTION_ID 
2312  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_EXECUTION_ID, START_TIME, END_TIME, STATUS, EXIT_CODE, EXIT_MESSAGE, CREATE_TIME, 
LAST_UPDATED, VERSION, JOB_CONFIGURATION_LOCATION from BATCH_JOB_EXECUTION where JOB_INSTANCE_ID 
= 1 order by JOB_EXECUTION_ID desc 
2312  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_EXECUTION_ID, KEY_NAME, TYPE_CD, STRING_VAL, DATE_VAL, LONG_VAL, DOUBLE_VAL, IDENTIFYING 
from BATCH_JOB_EXECUTION_PARAMS where JOB_EXECUTION_ID = 1 
2312  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT STEP_EXECUTION_ID, STEP_NAME, START_TIME, END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, 
FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, 
ROLLBACK_COUNT, LAST_UPDATED, VERSION from BATCH_STEP_EXECUTION where JOB_EXECUTION_ID = 1 
order by STEP_EXECUTION_ID 
2313  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.executeQuery(DelegatingStatement.java:208)
6. select BATCH_STEP_EXECUTION_SEQ.nextval from dual 
2314  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT into BATCH_STEP_EXECUTION(STEP_EXECUTION_ID, VERSION, STEP_NAME, JOB_EXECUTION_ID, START_TIME, 
END_TIME, STATUS, COMMIT_COUNT, READ_COUNT, FILTER_COUNT, WRITE_COUNT, EXIT_CODE, EXIT_MESSAGE, 
READ_SKIP_COUNT, WRITE_SKIP_COUNT, PROCESS_SKIP_COUNT, ROLLBACK_COUNT, LAST_UPDATED) values(1, 
0, 'readWriteProducts', 1, '01/25/2020 18:48:48.997', NULL, 'STARTING', 0, 0, 0, 0, 'EXECUTING', 
'', 0, 0, 0, 0, '01/25/2020 18:48:48.997') 
2315  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. INSERT INTO BATCH_STEP_EXECUTION_CONTEXT (SHORT_CONTEXT, SERIALIZED_CONTEXT, STEP_EXECUTION_ID) 
VALUES('{"map":[""]}', NULL, 1) 
2316  INFO  o.s.b.core.job.SimpleStepHandler - Executing step: [readWriteProducts]
2317  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:49.000', END_TIME = NULL, STATUS 
= 'STARTED', COMMIT_COUNT = 0, READ_COUNT = 0, FILTER_COUNT = 0, WRITE_COUNT = 0, EXIT_CODE 
= 'EXECUTING', EXIT_MESSAGE = '', VERSION = 1, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT = 0, 
WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:49.000' where STEP_EXECUTION_ID 
= 1 and VERSION = 0 
2317  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
2324  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":91},{"string":"FlatFileItemWriter.written","long":0},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":0},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
2327  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":155},{"string":"FlatFileItemWriter.written","long":3},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":3},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
2328  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:49.000', END_TIME = NULL, STATUS 
= 'STARTED', COMMIT_COUNT = 1, READ_COUNT = 3, FILTER_COUNT = 0, WRITE_COUNT = 3, EXIT_CODE 
= 'EXECUTING', EXIT_MESSAGE = '', VERSION = 2, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT = 0, 
WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:49.011' where STEP_EXECUTION_ID 
= 1 and VERSION = 1 
2329  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
2332  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":182},{"string":"FlatFileItemWriter.written","long":4},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":5},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
2333  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:49.000', END_TIME = NULL, STATUS 
= 'STARTED', COMMIT_COUNT = 2, READ_COUNT = 4, FILTER_COUNT = 0, WRITE_COUNT = 4, EXIT_CODE 
= 'EXECUTING', EXIT_MESSAGE = '', VERSION = 3, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT = 0, 
WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:49.016' where STEP_EXECUTION_ID 
= 1 and VERSION = 2 
2334  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
2336  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[{"entry":[{"string":"FlatFileItemWriter.current.count","long":182},{"string":"FlatFileItemWriter.written","long":4},{"string":["batch.taskletType","org.springframework.batch.core.step.item.ChunkOrientedTasklet"]},{"string":"FlatFileItemReader.read.count","int":5},{"string":["batch.stepType","org.springframework.batch.core.step.tasklet.TaskletStep"]}]}]}', 
SERIALIZED_CONTEXT = NULL WHERE STEP_EXECUTION_ID = 1 
2337  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_STEP_EXECUTION set START_TIME = '01/25/2020 18:48:49.000', END_TIME = '01/25/2020 
18:48:49.020', STATUS = 'COMPLETED', COMMIT_COUNT = 2, READ_COUNT = 4, FILTER_COUNT = 0, WRITE_COUNT 
= 4, EXIT_CODE = 'COMPLETED', EXIT_MESSAGE = '', VERSION = 4, READ_SKIP_COUNT = 0, PROCESS_SKIP_COUNT 
= 0, WRITE_SKIP_COUNT = 0, ROLLBACK_COUNT = 0, LAST_UPDATED = '01/25/2020 18:48:49.020' where 
STEP_EXECUTION_ID = 1 and VERSION = 3 
2338  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
2340  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_JOB_EXECUTION_CONTEXT SET SHORT_CONTEXT = '{"map":[""]}', SERIALIZED_CONTEXT = 
NULL WHERE JOB_EXECUTION_ID = 1 
2341  INFO  e.b.s.l.EIMBatchMonitoringListener - Ended job JobExecution: id=1, version=1, startTime=Sat Jan 25 18:48:48 EST 2020, endTime=Sat Jan 25 18:48:49 EST 2020, lastUpdated=Sat Jan 25 18:48:48 EST 2020, status=COMPLETED, exitStatus=exitCode=COMPLETED;exitDescription=, job=[JobInstance: id=1, version=0, Job=[importProducts]], jobParameters=[{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128978}]
2341  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT VERSION FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID=1 
2342  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT COUNT(*) FROM BATCH_JOB_EXECUTION WHERE JOB_EXECUTION_ID = 1 
2343  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:105)
6. UPDATE BATCH_JOB_EXECUTION set START_TIME = '01/25/2020 18:48:48.988', END_TIME = '01/25/2020 
18:48:49.024', STATUS = 'COMPLETED', EXIT_CODE = 'COMPLETED', EXIT_MESSAGE = '', VERSION = 
2, CREATE_TIME = '01/25/2020 18:48:48.983', LAST_UPDATED = '01/25/2020 18:48:49.025' where 
JOB_EXECUTION_ID = 1 and VERSION = 1 
2344  INFO  o.s.b.c.l.support.SimpleJobLauncher - Job: [FlowJob: [name=importProducts]] completed with the following parameters: [{targetDirectory=./target/test-classes/data/, inputFile=products.txt, outputFile=products-out.txt, timestamp=1579996128978}] and the following status: [COMPLETED]
4350  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
6. SELECT JOB_INSTANCE_ID, JOB_NAME from BATCH_JOB_INSTANCE where JOB_NAME = 'importProducts' 
order by JOB_INSTANCE_ID desc 
4351  INFO  o.s.c.s.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@5b7ea70d: startup date [Sat Jan 25 18:48:48 EST 2020]; root of context hierarchy
4352  INFO  o.s.b.f.s.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5ed731d0: defining beans [batchMonitoringListener,org.springframework.batch.core.scope.internalStepScope,org.springframework.batch.core.scope.internalJobScope,org.springframework.beans.factory.config.CustomEditorConfigurer,org.springframework.batch.core.configuration.xml.CoreNamespacePostProcessor,batch_state_transition_comparator,readWriteProducts,org.springframework.batch.core.configuration.xml.SimpleFlowFactoryBean#0,importProducts,reader,productItemWriter,delimitedProductItemWriter,noOpwriter,dataSource,transactionManager,jobRepository,jobLauncher,org.springframework.jmx.export.MBeanExporter#0,jobExplorer,jobRegistry,jobOperator,exceptionTranslator,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,scopedTarget.reader,scopedTarget.delimitedProductItemWriter]; root of factory hierarchy
4352  INFO  o.s.jmx.export.MBeanExporter - Unregistering JMX-exposed beans on shutdown
4353  DEBUG jdbc.sqlonly -  org.apache.commons.dbcp.DelegatingStatement.execute(DelegatingStatement.java:264)
6. SHUTDOWN 
